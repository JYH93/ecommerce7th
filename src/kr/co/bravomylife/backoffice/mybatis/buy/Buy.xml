<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.bravomylife.backoffice.mybatis.buy.Buy">

	<select id="select" parameterType="buyDetailDto" resultType="buyDetailDto">
		SELECT
			SEQ_MBR
			, SLE_NM
			, COUNT
			, PRICE
			, POINT
			, FLG_REVIEW
			, TO_CHAR(tb_buy_dtl.DT_REG, 'YYYY-MM-DD') dt_reg
			
		FROM
			TB_BUY_DTL 
		WHERE SEQ_BUY_DTL = #{seq_buy_dtl}
	</select>

	<update id="update" parameterType ="buyDto">
		UPDATE
			TB_BUY_MST
		SET
			CD_STATE			= #{cd_state}
			, CD_STATE_PAY		= #{cd_state_pay}
			, CD_STATE_DELIVERY	= #{cd_state_delivery}
			, UPDATER			= #{updater}
		WHERE
			SEQ_BUY_MST = #{seq_buy_mst}
	</update>

	<select id="count" parameterType="pagingDto" resultType="java.lang.Integer">
		SELECT
			COUNT(ROWNUM)
		FROM
			TB_BUY_MST buy_mst
		LEFT JOIN
			TB_MBR_MST mbr_mst
		ON
			buy_mst.SEQ_MBR = mbr_mst.SEQ_MBR
		WHERE
		<include refid="where" />
	</select>

	<select id="list" parameterType="pagingDto" resultType="buyDto">
		SELECT
			*
		FROM
			(
			SELECT
				/*+ first_rows(10) */ ROW_NUMBER() OVER (ORDER BY buy_mst.DT_REG DESC) rnum
				, mbr_mst.SEQ_MBR
				, mbr_mst.EMAIL 
				, mbr_mst.MBR_NM
				, buy_mst.SEQ_BUY_MST
				, buy_mst.BUY_INFO
				, buy_mst.BUY_COUNT
				, buy_mst.CD_STATE
				, buy_mst.CD_STATE_PAY
				, buy_mst.CD_STATE_DELIVERY
				, TO_CHAR(buy_mst.DT_REG, 'YYYY-MM-DD') dt_reg
			FROM
				TB_BUY_MST buy_mst
			LEFT JOIN 
				TB_MBR_MST mbr_mst
			ON
				buy_mst.SEQ_MBR = mbr_mst.SEQ_MBR
			WHERE
			<include refid="where" />
			)
		<![CDATA[
		WHERE
			rnum >= (${currentPage} - 1) * ${linePerPage} + 1 AND rnum <= ${currentPage} * ${linePerPage}
		]]> 
		ORDER BY
			rnum
	</select>

	<sql id="where">
			<![CDATA[
			buy_mst.CD_STATE > -1
			]]>
			<if test="searchWord != null and searchWord != ''">
				<if test="searchKey == 'mbr_nm'">
					AND MBR_NM = #{searchWord}
				</if>
				<if test="searchKey == 'email'">
					AND EMAIL = #{searchWord}
				</if>
				<if test="searchKey == 'cd_state'">
					AND CD_STATE = #{searchWord}
				</if>
				<if test="searchKey == 'cd_state_pay'">
					AND CD_STATE_PAY = #{searchWord}
				</if>
				<if test="searchKey == 'cd_state_delivery'">
					AND CD_STATE_DELIVERY = #{searchWord}
				</if>
			</if>
	</sql>
	
</mapper>

